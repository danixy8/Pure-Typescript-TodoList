{
    "version": 3,
    "file": " todo-it.js",
    "sourceRoot": "",
    "sources": [
        " todo-it.ts"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "\nlet todoList: string[] = [];\n\nconsole.log(todoList);\n\nconst todoInput: HTMLInputElement = document.getElementById('todoInput') as HTMLInputElement;\n\n    function addTodo(): void {\n        if(todoInput === null){\n            console.error('The todo input is missing from the page!');\n            return\n        }\n\n        const newTodo: string = todoInput.value;\n\n        if ('' !== newTodo.trim()){\n            console.log('Adding todo: ', newTodo);\n\n            todoList.push(newTodo);\n            console.log('New todo list: ', todoList);\n\n            todoInput.value = '';\n            \n            todoList.sort();\n\n            updateTodoList();\n\n            filterTodoList();\n        }\n    }\n\nconst todoListDiv: HTMLDivElement = document.getElementById('todoListContainer') as HTMLDivElement;\n \n    function updateTodoList(): void {\n        console.log('updating the rendered todo list');\n        todoListDiv.innerHTML = '';\n        todoListDiv.textContent = '';\n    \n        const ul = document.createElement('ul');\n        ul.setAttribute('id', 'todoList');\n        todoListDiv.appendChild(ul);\n\n        todoList.forEach(item => {\n            const li = document.createElement('li');\n            li.setAttribute('class', 'todo-list-item');\n            li.innerHTML = `<a href='#'\n            onclick='removeTodoListItem(\"${item}\")'>${item}</a>`\n            ul.appendChild(li)\n        })\n \n    }\n\n    function filterTodoList(): void {\n        console.log('Filtering the rendered todo list');\n\n        const todoListHtml: HTMLUListElement = \n        document.getElementById('todoList') as HTMLUListElement;\n\n        if (todoListHtml === null) {\n            console.log('Nothing to filter');\n            return;\n        }\n\n        const todoListFilter = document.getElementById('todoFilter') as HTMLInputElement;\n        const todoListFilterText = todoListFilter.value.toUpperCase();\n\n        todoListHtml.childNodes.forEach((item) => {\n            let itemText: string | null = item.textContent;\n            if (itemText !== null) {\n                itemText = itemText.toUpperCase();\n\n                if (itemText.startsWith(todoListFilterText)){\n                    (item as HTMLLIElement).style.display = \"list-item\";\n                }else {\n                    (item as HTMLLIElement).style.display = \"none\";\n                }\n            }\n        })\n\n    }\n\n   function removeTodoListItem(itemToRemove: string): void {\n        console.log(\"item to remove\", itemToRemove);\n\n        todoList = todoList.filter((value: string, _index, _array) =>{\n            if(value === itemToRemove){\n                return false;\n            }\n            return true;\n        })\n\n        updateTodoList();\n\n        filterTodoList();\n   } \n\n"
    ]
}