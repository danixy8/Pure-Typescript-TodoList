{"version":3,"file":" todo-it.js","sourceRoot":"","sources":[" todo-it.ts"],"names":[],"mappings":";AACA;IAII,kBAAoB,YAAoB,EAAE,UAAmB;QAAzC,iBAAY,GAAZ,YAAY,CAAQ;QACpC,IAAI,CAAC,kBAAkB,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QAE/C,IAAG,UAAU,EAAC;YACV,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;SACjC;aAAK;YACF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;SAC7D;IACL,CAAC;IAED,sBAAI,uCAAiB;aAArB;YACI,OAAO,IAAI,CAAC,kBAAkB,CAAA;QAClC,CAAC;;;OAAA;IAED,sBAAI,gCAAU;aAAd;YACI,OAAO,IAAI,CAAC,WAAW,CAAA;QAC3B,CAAC;;;OAAA;IAED,sBAAI,iCAAW;aAAf;YACI,OAAO,IAAI,CAAC,YAAY,CAAA;QAC5B,CAAC;;;OAAA;IACL,eAAC;AAAD,CAAC,AAzBD,IAyBC;AAED;IAGI,kBAAY,QAAqB;QAFzB,cAAS,GAA4B,EAAE,CAAC;QAG5C,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,MAAM,EAAC;YAC3C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SACpD;IACL,CAAC;IAED,sBAAI,8BAAQ;aAAZ;YACI,OAAO,IAAI,CAAC,SAAS,CAAA;QACzB,CAAC;;;OAAA;IAED,0BAAO,GAAP,UAAQ,QAAkB;QACtB,IAAG,QAAQ,EAAC;YACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SACpD;IACL,CAAC;IAED,6BAAU,GAAV,UAAW,MAAc;QACrB,IAAG,MAAM,EAAC;YACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAA,IAAI;gBACtC,IAAG,IAAI,CAAC,UAAU,KAAK,MAAM,EAAE;oBAC3B,OAAO,KAAK,CAAC;iBAChB;qBAAI;oBACD,OAAO,IAAI,CAAC;iBACf;YACL,CAAC,CAAC,CAAA;SACL;IACL,CAAC;IACL,eAAC;AAAD,CAAC,AA9BD,IA8BC;AAUD;IAMI;QACI,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAqB,CAAC;QAC1E,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,mBAAmB,CAAmB,CAAC;QAClF,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAqB,CAAC;QAEhF,IAAG,CAAC,IAAI,CAAC,SAAS,EAAC;YACf,MAAM,IAAI,KAAK,CAAC,uEAAuE,CAAC,CAAA;SAC3F;QAED,IAAG,CAAC,IAAI,CAAC,WAAW,EAAC;YACjB,MAAM,IAAI,KAAK,CAAC,yEAAyE,CAAC,CAAA;SAC7F;QAED,IAAG,CAAC,IAAI,CAAC,cAAc,EAAC;YACpB,MAAM,IAAI,KAAK,CAAC,wEAAwE,CAAC,CAAA;SAC5F;IACL,CAAC;IAED,qCAAU,GAAV;QACI,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,EAAE,CAAA;IAC7B,CAAC;IAED,oCAAS,GAAT;QACI,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;IACnD,CAAC;IAED,mCAAQ,GAAR;QACI,IAAM,cAAc,GAAW,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAC3D,IAAM,MAAM,GAAa,IAAI,QAAQ,CAAC,cAAc,CAAC,CAAC;QACtD,OAAO,MAAM,CAAA;IACjB,CAAC;IAED,iCAAM,GAAN,UAAO,QAAiC;QACpC,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;QAC/C,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,EAAE,CAAC;QAElC,IAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACxC,EAAE,CAAC,YAAY,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QAClC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAEjC,QAAQ,CAAC,OAAO,CAAC,UAAA,IAAI;YACjB,IAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YACxC,EAAE,CAAC,YAAY,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;YAC3C,EAAE,CAAC,SAAS,GAAG,4DACe,IAAI,CAAC,UAAU,4BAC1C,IAAI,CAAC,WAAW,SAAM,CAAC;YAC1B,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACvB,CAAC,CAAC,CAAA;IACN,CAAC;IAED,iCAAM,GAAN;QACI,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;QAChD,IAAM,YAAY,GAClB,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAqB,CAAA;QAEvD,IAAI,YAAY,IAAI,IAAI,EAAC;YACrB,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;YACjC,OAAM;SACT;QAED,IAAM,kBAAkB,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAC5C,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,IAAI;YACjC,IAAI,QAAQ,GAAkB,IAAI,CAAC,WAAW,CAAC;YAC/C,IAAI,QAAQ,IAAI,IAAI,EAAC;gBACjB,QAAQ,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC;gBAElC,IAAI,QAAQ,CAAC,UAAU,CAAC,kBAAkB,CAAC,EAAC;oBACvC,IAAsB,CAAC,KAAK,CAAC,OAAO,GAAG,WAAW,CAAC;iBACvD;qBAAM;oBACF,IAAsB,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;iBAClD;aACJ;QACL,CAAC,CAAC,CAAA;IACN,CAAC;IACL,uBAAC;AAAD,CAAC,AAjFD,IAiFC;AAQD;IAGI,gBAAqB,aAA2B;QAA3B,kBAAa,GAAb,aAAa,CAAc;QAF/B,cAAS,GAAc,IAAI,QAAQ,EAAE,CAAC;QAGnD,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAEtB,IAAI,CAAC,aAAa,EAAC;YACf,MAAM,IAAI,KAAK,CAAE,6EAA6E,CAAC,CAAA;SAClG;IACL,CAAC;IAED,wBAAO,GAAP;QACI,IAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;QAE9C,IAAI,EAAE,KAAK,OAAO,CAAC,WAAW,EAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;YAEtC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAExD,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAEhC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAEnD,IAAI,CAAC,cAAc,EAAE,CAAC;SACzB;IACL,CAAC;IAED,+BAAc,GAAd;QACI,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;IAC5B,CAAC;IAGL,2BAAU,GAAV,UAAW,UAAkB;QACzB,IAAG,UAAU,EAAC;YACV,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,UAAU,CAAC,CAAC;YAC5C,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;YACtC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YACnD,IAAI,CAAC,cAAc,EAAE,CAAA;SACxB;IACL,CAAC;IACL,aAAC;AAAD,CAAC,AAzCD,IAyCC;AAGD,IAAM,IAAI,GAAG,IAAI,gBAAgB,EAAE,CAAC;AACpC,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC;AAGhC;IAAA;IAkBA,CAAC;IAjBU,kBAAO,GAAd,UAAe,KAAoB;QAC/B,IAAI,aAAa,GAAG,KAAK,CAAC;QAE1B,IAAG,KAAK,KAAK,SAAS,IAAI,KAAK,CAAC,gBAAgB,EAAC;YAC7C,OAAO,KAAK,CAAC;SAChB;QAED,IAAI,KAAK,IAAI,SAAS,EAAE;YACpB,aAAa,GAAG,KAAK,CAAC;SACzB;aAAK,IAAI,KAAK,CAAC,GAAG,KAAK,SAAS,EAAC;YAC9B,aAAa,GAAG,KAAK,CAAC,GAAG,KAAK,OAAO,CAAC;SACzC;aAAK,IAAI,KAAK,CAAC,GAAG,KAAK,SAAS,EAAE;YAC/B,aAAa,GAAG,KAAK,CAAC,OAAO,KAAK,EAAE,CAAC;SACxC;QAED,OAAO,aAAa,CAAC;IACzB,CAAC;IACL,iBAAC;AAAD,CAAC,AAlBD,IAkBC","sourcesContent":["\nclass TodoItem {\n    private readonly _creationTimestamp: number;\n    private readonly _identifier: string;\n\n    constructor(private _description: string, identifier?: string){\n        this._creationTimestamp = new Date().getTime();\n\n        if(identifier){\n            this._identifier = identifier;\n        }else {\n            this._identifier = Math.random().toString(36).substr(2,9);\n        }\n    }\n\n    get creationTimestamp(): number{\n        return this._creationTimestamp\n    }\n\n    get identifier(): string{\n        return this._identifier\n    }\n\n    get description(): string{\n        return this._description\n    }\n}\n\nclass TodoList {\n    private _todoList: ReadonlyArray<TodoItem> = [];\n\n    constructor(todoList?: TodoItem[]){\n        if (Array.isArray(todoList) && todoList.length){\n            this._todoList = this._todoList.concat(todoList);\n        }\n    }\n\n    get todoList(): ReadonlyArray<TodoItem>{\n        return this._todoList\n    }\n\n    addTodo(todoItem: TodoItem){\n        if(todoItem){\n            this._todoList = this._todoList.concat(todoItem);\n        }\n    }\n\n    removeTodo(itemId: string){\n        if(itemId){\n            this._todoList = this.todoList.filter(item => {\n                if(item.identifier === itemId) {\n                    return false;\n                }else{\n                    return true;\n                }\n            })\n        }\n    }\n}\n\ninterface todoListView {\n    render(todoList: ReadonlyArray<TodoItem>): void;\n    getInput(): TodoItem;\n    getFilter(): string;\n    clearInput(): void;\n    filter(): void;\n}\n\nclass HTMLTodoListView implements todoListView{\n\n    private readonly todoInput: HTMLInputElement;\n    private readonly todoListDiv: HTMLDivElement;\n    private readonly todoListFilter: HTMLInputElement;\n\n    constructor(){\n        this.todoInput = document.getElementById('todoInput') as HTMLInputElement;\n        this.todoListDiv = document.getElementById('todoListContainer') as HTMLDivElement;\n        this.todoListFilter = document.getElementById('todoFilter') as HTMLInputElement;\n\n        if(!this.todoInput){\n            throw new Error(\"Could not find the todoInput HTML input element. Is the HTML correct?\")\n        }\n\n        if(!this.todoListDiv){\n            throw new Error(\"Could not find the todoListDiv HTML input element. Is the HTML correct?\")\n        }\n\n        if(!this.todoListFilter){\n            throw new Error(\"Could not find the todoFilter HTML input element. Is the HTML correct?\")\n        }\n    }\n\n    clearInput(): void {\n        this.todoInput.value = ''\n    }\n\n    getFilter(): string{\n        return this.todoListFilter.value.toUpperCase();\n    }\n\n    getInput(): TodoItem{\n        const todoInputValue: string = this.todoInput.value.trim();\n        const retVal: TodoItem = new TodoItem(todoInputValue);\n        return retVal\n    }\n\n    render(todoList: ReadonlyArray<TodoItem>):void{\n        console.log(\"Updating the rendered todo list\");\n        this.todoListDiv.innerHTML = '';\n        this.todoListDiv.textContent = '';\n\n        const ul = document.createElement('ul');\n        ul.setAttribute('id', 'todoList');\n        this.todoListDiv.appendChild(ul);\n\n        todoList.forEach(item => {\n            const li = document.createElement('li');\n            li.setAttribute('class', 'todo-list-item');\n            li.innerHTML = `<a href='#' \n            onclick='todoIt.removeTodo(\"${item.identifier}\")' \n            >${item.description}</a>`;\n            ul.appendChild(li);\n        })\n    }\n\n    filter(): void {\n        console.log(\"Filtering the rendered todo list\");\n        const todoListHTML: HTMLUListElement = \n        document.getElementById('todoList') as HTMLUListElement\n\n        if (todoListHTML == null){\n            console.log('Nothing to filter');\n            return\n        }\n\n        const todoListFilterText = this.getFilter();\n        todoListHTML.childNodes.forEach((item) => {\n            let itemText: string | null = item.textContent;\n            if (itemText != null){\n                itemText = itemText.toUpperCase();\n\n                if (itemText.startsWith(todoListFilterText)){\n                    (item as HTMLLIElement).style.display = \"list-item\";\n                } else {\n                    (item as HTMLLIElement).style.display = \"none\";\n                }\n            }\n        })\n    }\n}\n\ninterface TodoListController {\n    addTodo(): void;\n    filterTodoList(): void;\n    removeTodo(identifier: string): void;\n}\n\nclass TodoIt implements TodoListController {\n    private readonly _todoList : TodoList = new TodoList();\n\n    constructor (private _todoListView: todoListView){\n        console.log('TodoIt');\n\n        if (!_todoListView){\n            throw new Error (\"The todo list view implementation is required to property initialize TodoIt\")\n        }\n    }\n\n    addTodo(): void {\n        const newTodo = this._todoListView.getInput();\n\n        if ('' !== newTodo.description){\n            console.log(\"Adding todo: \", newTodo);\n\n            this._todoList.addTodo(newTodo);\n            console.log(\"New todo list: \", this._todoList.todoList);\n\n            this._todoListView.clearInput();\n\n            this._todoListView.render(this._todoList.todoList);\n\n            this.filterTodoList();\n        }\n    }\n\n    filterTodoList(): void {\n        this._todoListView.filter();\n        }\n    \n\n    removeTodo(identifier: string): void {\n        if(identifier){\n            console.log(\"item to remove: \", identifier);\n            this._todoList.removeTodo(identifier);\n            this._todoListView.render(this._todoList.todoList);\n            this.filterTodoList()\n        }\n    }\n}\n\n\nconst view = new HTMLTodoListView();\nconst todoIt = new TodoIt(view);\n\n\nclass EventUtils {\n    static isEnter(event: KeyboardEvent): boolean{\n        let isEnterResult = false;\n\n        if(event !== undefined && event.defaultPrevented){\n            return false;\n        }\n\n        if (event == undefined) {\n            isEnterResult = false;\n        }else if (event.key !== undefined){\n            isEnterResult = event.key === 'Enter';\n        }else if (event.key !== undefined) {\n            isEnterResult = event.keyCode === 13;\n        }\n        \n        return isEnterResult;\n    }\n}"]}